#!/usr/bin/env bash

set -eo pipefail

APP_NAME="${1}"
MODULE_NAME="${2}"

FIND_APP_NAME="portfolio"
FIND_MODULE_NAME="Portfolio"
FIND_FRAMEWORK="phoenix"

if [ -z "${APP_NAME}" ] || [ -z "${MODULE_NAME}" ]; then
    echo "You must supply both an app and module name, example: ${0} myapp MyApp"
    exit 1
fi

if [ "${APP_NAME}" = "${FIND_APP_NAME}" ]; then
    echo "Your new app name must be different than the current app name"
    exit 1
fi

cat << EOF
When renaming your project you'll need to re-create a new database.

This can easily be done with Docker, but before this script does it
please agree that it's ok for this script to delete your current
project's database(s) by removing any associated Docker volumes.

EOF

while true; do
    read -p "Run docker compose down -v (y/n)? " -r yn
    case "${yn}" in
        [Yy]* )
          printf "\n--------------------------------------------------------\n"
          docker compose down -v
          printf -- "--------------------------------------------------------\n"

          break;;
        [Nn]* ) exit;;
        * ) echo "";;
    esac
done

# -----------------------------------------------------------------------------
# The core of the script which renames a few things.
# -----------------------------------------------------------------------------

# Function to safely rename files or directories
safe_mv() {
    local src="$1"
    local dest="$2"
    if [ -e "$src" ]; then
        mv "$src" "$dest"
        echo "Renamed '$src' to '$dest'."
    else
        echo "Skipped renaming '$src' as it does not exist."
    fi
}

# Function to safely replace content in files
safe_replace() {
    local file="$1"
    local find="$2"
    local replace="$3"
    if [ -f "$file" ]; then
        sed -i "s/${find}/${replace}/g" "$file"
        echo "Updated content in '$file'."
    else
        echo "Skipped updating '$file' as it does not exist."
    fi
}

# Change to the backend directory where our Phoenix app lives
cd "$(dirname "$0")/.."

# Perform renaming operations for files and directories
safe_mv "lib/${FIND_APP_NAME}.ex" "lib/${APP_NAME}.ex"
safe_mv "lib/${FIND_APP_NAME}_web.ex" "lib/${APP_NAME}_web.ex"
safe_mv "lib/${FIND_APP_NAME}" "lib/${APP_NAME}"
safe_mv "lib/${FIND_APP_NAME}_web" "lib/${APP_NAME}_web"
safe_mv "test/${FIND_APP_NAME}" "test/${APP_NAME}"
safe_mv "test/${FIND_APP_NAME}_web" "test/${APP_NAME}_web"

# Update content in key files
find . -type f -name "*.ex" -o -name "*.exs" -o -name "*.eex" -o -name "*.heex" -o -name "*.leex" | while read -r file; do
    safe_replace "$file" "${FIND_APP_NAME}" "${APP_NAME}"
    safe_replace "$file" "${FIND_MODULE_NAME}" "${MODULE_NAME}"
done

# Update mix.exs specifically
if [ -f "mix.exs" ]; then
    safe_replace "mix.exs" "app: :${FIND_APP_NAME}" "app: :${APP_NAME}"
    safe_replace "mix.exs" "module: ${FIND_MODULE_NAME}" "module: ${MODULE_NAME}"
fi

# -----------------------------------------------------------------------------

cat << EOF

--------------------------------------------------------
Your project has been renamed successfully!
--------------------------------------------------------

EOF

function init_git_repo {
  [ -d .git/ ] && rm -rf .git/

  cat << EOF

--------------------------------------------------------
$(git init)
--------------------------------------------------------
EOF

  git symbolic-ref HEAD refs/heads/main
}

while true; do
    read -p "Do you want to init a new local git repo (y/n)? " -r yn
    case "${yn}" in
        [Yy]* ) init_git_repo; break;;
        [Nn]* ) break;;
        * ) echo "";;
    esac
done

cat << EOF

We're done here. Everything worked!

If you're happy with your new project's name you can delete this
script by running: rm bin/rename-project

Or you can keep it around in case you decide to change your project's
name later on after developing it for a bit. You can re-run this
script as many times as you want until you're happy.

Check out the rest of the README on GitHub to wrap things up:

https://github.com/nickjj/docker-${FIND_FRAMEWORK}-example#start-and-setup-the-project
EOF
